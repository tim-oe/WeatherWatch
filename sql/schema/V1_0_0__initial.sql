CREATE TABLE `outdoor_sensor` (
    `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    `read_time` timestamp NOT NULL,
	  `battery_ok` bit(1) NOT NULL,
    `sensor_id` SMALLINT UNSIGNED NOT NULL,
    `temperature_f` DECIMAL(5,2) NOT NULL,
    `humidity` TINYINT UNSIGNED NOT NULL,
    `pressure` DECIMAL(6,2) NOT NULL,
    `rain_cum_mm` DECIMAL(7,2) NOT NULL comment 'cumulative rain in mm since last reset',
    `rain_delta_mm` DECIMAL(7,2) NOT NULL comment 'rain in mm since the last sensor read',
    `wind_avg_m_s` DECIMAL(5,2) NOT NULL,
    `wind_max_m_s` DECIMAL(5,2) NOT NULL,
    `wind_dir_deg` SMALLINT UNSIGNED NOT NULL,
    `light_lux` INT UNSIGNED NOT NULL,
    `uv` DECIMAL(5,2) NOT NULL,
    `raw` JSON NOT NULL COMMENT 'the raw json record', 
	  PRIMARY KEY (`id`, `read_time`),
	  UNIQUE KEY out_unique_sensor (read_time, sensor_id),
    KEY `read_time_idx` (`read_time`),
    KEY `sensor_id_idx` (`sensor_id`)
) ENGINE=INNODB DEFAULT CHARSET=utf8mb4
  PARTITION BY RANGE( UNIX_TIMESTAMP(read_time) ) (
    PARTITION p2024 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01')),
    PARTITION p2025 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01')),
    PARTITION p2026 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01')),
    PARTITION p2027 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01')),
    PARTITION p2028 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01')),
    PARTITION p2029 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01')),
    PARTITION p2030 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01')),
    PARTITION p2031 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01')),
    PARTITION p2032 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01')),
    PARTITION p2033 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01')),
    PARTITION p2034 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

-- rain delta fix up.
-- update outdoor_sensor curr
-- inner join outdoor_sensor prev on (curr.id-1) = prev.id
-- set curr.rain_delta_mm = if (curr.rain_cum_mm - prev.rain_cum_mm >= 0, curr.rain_cum_mm - prev.rain_cum_mm,  curr.rain_cum_mm)  

CREATE TABLE `indoor_sensor` (
    `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    `read_time` timestamp NOT NULL,
	  `battery_ok` bit(1) NOT NULL,
    `sensor_id` SMALLINT UNSIGNED NOT NULL,
    `channel` SMALLINT UNSIGNED NOT NULL,
    `temperature_f` DECIMAL(5,2) NOT NULL,
    `humidity` TINYINT UNSIGNED NOT NULL,
    `raw` JSON NOT NULL COMMENT 'the raw json record', 
	  PRIMARY KEY (`id`, `read_time`),
	  UNIQUE KEY in_unique_sensor (read_time, sensor_id, channel),
    KEY `read_time_idx` (`read_time`),
    KEY `sensor_id_channel_idx` (`sensor_id`,`channel`)
) ENGINE=INNODB DEFAULT CHARSET=utf8mb4
  PARTITION BY RANGE( UNIX_TIMESTAMP(read_time) ) (
    PARTITION p2024 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01')),
    PARTITION p2025 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01')),
    PARTITION p2026 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01')),
    PARTITION p2027 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01')),
    PARTITION p2028 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01')),
    PARTITION p2029 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01')),
    PARTITION p2030 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01')),
    PARTITION p2031 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01')),
    PARTITION p2032 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01')),
    PARTITION p2033 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01')),
    PARTITION p2034 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

CREATE TABLE `sdr_metrics` (
    `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    `start_time` timestamp NOT NULL,
    `end_time` timestamp NOT NULL,
    `duration_sec` SMALLINT UNSIGNED NOT NULL,
    `sensor_cnt` SMALLINT UNSIGNED NOT NULL,
	  PRIMARY KEY (`id`, `start_time`),
	  UNIQUE KEY sdr_unique_sensor (start_time, end_time),
    KEY `start_time_idx` (`start_time`),
    KEY `end_time_idx` (`end_time`)
) ENGINE=INNODB DEFAULT CHARSET=utf8mb4
  PARTITION BY RANGE( UNIX_TIMESTAMP(start_time) ) (
    PARTITION p2024 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01')),
    PARTITION p2025 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01')),
    PARTITION p2026 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01')),
    PARTITION p2027 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01')),
    PARTITION p2028 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01')),
    PARTITION p2029 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01')),
    PARTITION p2030 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01')),
    PARTITION p2031 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01')),
    PARTITION p2032 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01')),
    PARTITION p2033 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01')),
    PARTITION p2034 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

CREATE TABLE `pi_metrics` (
    `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    `read_time` timestamp NOT NULL DEFAULT CURRENT_TIMESTAMP,
    `mem_available` BIGINT UNSIGNED NOT NULL,
    `mem_used` BIGINT UNSIGNED NOT NULL,
    `mem_percent` DECIMAL(4,2) NOT NULL,
    `disk_available` BIGINT UNSIGNED NOT NULL,
    `disk_used` BIGINT UNSIGNED NOT NULL,
    `disk_percent` DECIMAL(4,2) NOT NULL,
	  `cpu_temp_c` DECIMAL(5,2) NOT NULL,
	  PRIMARY KEY (`id`, `read_time`),
	  UNIQUE KEY pi_unique_sensor (read_time)
) ENGINE=INNODB DEFAULT CHARSET=utf8mb4
  PARTITION BY RANGE( UNIX_TIMESTAMP(read_time) ) (
    PARTITION p2024 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01')),
    PARTITION p2025 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01')),
    PARTITION p2026 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01')),
    PARTITION p2027 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01')),
    PARTITION p2028 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01')),
    PARTITION p2029 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01')),
    PARTITION p2030 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01')),
    PARTITION p2031 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01')),
    PARTITION p2032 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01')),
    PARTITION p2033 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01')),
    PARTITION p2034 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

CREATE TABLE `aqi_sensor` (
    `id` BIGINT UNSIGNED NOT NULL AUTO_INCREMENT,
    `read_time` timestamp NOT NULL,
    `pm_1_0_conctrt_std` INT UNSIGNED NOT NULL,
    `pm_2_5_conctrt_std` INT UNSIGNED NOT NULL,
    `pm_10_conctrt_std` INT UNSIGNED NOT NULL,
    `pm_1_0_conctrt_atmosph` INT UNSIGNED NOT NULL,
    `pm_2_5_conctrt_atmosph` INT UNSIGNED NOT NULL,
    `pm_10_conctrt_atmosph` INT UNSIGNED NOT NULL,
    PRIMARY KEY (`id`, `read_time`),
	  UNIQUE KEY out_unique_sensor (read_time)
  )  ENGINE=INNODB DEFAULT CHARSET=utf8mb4
  PARTITION BY RANGE( UNIX_TIMESTAMP(read_time) ) (
    PARTITION p2024 VALUES LESS THAN (UNIX_TIMESTAMP('2025-01-01')),
    PARTITION p2025 VALUES LESS THAN (UNIX_TIMESTAMP('2026-01-01')),
    PARTITION p2026 VALUES LESS THAN (UNIX_TIMESTAMP('2027-01-01')),
    PARTITION p2027 VALUES LESS THAN (UNIX_TIMESTAMP('2028-01-01')),
    PARTITION p2028 VALUES LESS THAN (UNIX_TIMESTAMP('2029-01-01')),
    PARTITION p2029 VALUES LESS THAN (UNIX_TIMESTAMP('2030-01-01')),
    PARTITION p2030 VALUES LESS THAN (UNIX_TIMESTAMP('2031-01-01')),
    PARTITION p2031 VALUES LESS THAN (UNIX_TIMESTAMP('2032-01-01')),
    PARTITION p2032 VALUES LESS THAN (UNIX_TIMESTAMP('2033-01-01')),
    PARTITION p2033 VALUES LESS THAN (UNIX_TIMESTAMP('2034-01-01')),
    PARTITION p2034 VALUES LESS THAN (UNIX_TIMESTAMP('2035-01-01')),
    PARTITION future VALUES LESS THAN MAXVALUE
  );

-- persistent job store
-- https://apscheduler.readthedocs.io/en/3.x/modules/jobstores/sqlalchemy.html
CREATE TABLE apscheduler_jobs (
        id VARCHAR(191) NOT NULL,
        next_run_time FLOAT(25),
        job_state BLOB NOT NULL,
        PRIMARY KEY (id)
)